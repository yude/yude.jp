<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>yude.jp</title>
    <description>yude.jp のトップページです。</description>
    <link>https://www.yude.jp//</link>
    <atom:link href="https://www.yude.jp//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 11 Jan 2023 02:29:49 +0000</pubDate>
    <lastBuildDate>Wed, 11 Jan 2023 02:29:49 +0000</lastBuildDate>
    <generator>Jekyll v4.2.2</generator>
    
      <item>
        <title>2022 总结 &amp; 2023 展望</title>
        <description>&lt;p&gt;2022 年が終わります。なので、この年をまとめる記事をここに置いてみます。まずは、今年行ったことを羅列してみます。
なぐり書きすぎて・・・&lt;/p&gt;
&lt;h1 id=&quot;成し&quot;&gt;成し&lt;/h1&gt;

&lt;h2 id=&quot;資格&quot;&gt;資格&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;「基本情報技術者」資格を取得&lt;br /&gt;
箔が付いた感じがするんじゃないでしょうかｗ&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;大学&quot;&gt;大学&lt;/h2&gt;
&lt;h3 id=&quot;大学祭-実行委員会&quot;&gt;大学祭 実行委員会&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;広島市立大学 大学祭 の出店者向け Discord サーバーで使われる書類・チャンネルの管理用ボット「かんりちゃん」をリリース。&lt;br /&gt;
&lt;a href=&quot;https://github.com/ichidaisai/old-kanri-chan&quot;&gt;ichidaisai/old-kanri-chan: 広島市立大学 大学祭 Discord サーバー 管理用ボット&lt;/a&gt;&lt;br /&gt;
Discord API の Python 3.x 向けラッパー &lt;a href=&quot;https://github.com/Rapptz/discord.py&quot;&gt;Rapptz/discord.py&lt;/a&gt; の深い部分の機能を初めて使った回でした。これでは、比較的ギーク向けではないサービスとして開発する必要があり、できるだけ Discord ボットにありがちなコマンドの実行を避け、インタラクションを活用する方針で作成しました。極めて限られた期間 (約 3 週間) にしては上出来なプロダクトだと自分では思っていますが、コードの再利用性が低い点、typehint を使っていないことなどによるコードの視認性が低いこと、コメントが不十分すぎることを後悔しています。これらの視点において正直なところソースコードを Public にするか迷いましたが、OSS であることは重要だと思い公開設定にしています。開発前は引き継ぎも考え渋々 Python を利用したところはありましたが、Discord ボットとしては極めてマイナーな機能を実装するにあたって PyPI に存在する豊富なモジュールに助けられたところがあり、最終的には正しい選択だったと思います。&lt;/li&gt;
  &lt;li&gt;大学祭の当日のスタッフとして労働。&lt;br /&gt;
まあ、あんまやらんことではないかねえ ^_^&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;マスコミ研究会&quot;&gt;マスコミ研究会&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/masukendp/archives&quot;&gt;masukendp/archives: 広島市立大学 マスコミ研究会 による頒布物のアーカイブ&lt;/a&gt;&lt;br /&gt;
マスコミ研究会が過去 20 年に渡って頒布してきた「Dispatch Place」ですが、これらのデータの継続性は重要であると考え、可能な限りの回を GitHub Pages 上にアーカイブしました。これについても引き継ぎと技術的な点のバランスを考える必要があり、かなり渋かったです。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;講義&quot;&gt;講義&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;情報工学実験Ⅰ&lt;br /&gt;
なんか優秀だったらしい、そのうち広島市立大学の Web サイト上に顔面共有されるらしいね。それもまた愉快かも。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;プロジェクト演習&quot;&gt;プロジェクト演習&lt;/h3&gt;
&lt;p&gt;間接的に TypeScript を本腰入れてやらんといけんよねというきっかけになり、参加してよかったと思います。まだプロジェクト自体途中なので、足を引っ張らないようにやっていかんとね・・・&lt;/p&gt;

&lt;h2 id=&quot;インターン&quot;&gt;インターン&lt;/h2&gt;
&lt;p&gt;いい感じにキラキラ系と JTC 系に行けて、それぞれの雰囲気を知ることができて有意義でした。冬季インターンもやっていかないと、狂う。というか職をさっさと得て落ち着きたいんだよな漏れは。狂う狂う狂う狂う狂う狂う狂う狂う狂う狂う狂う狂う狂う狂う狂う狂う&lt;/p&gt;

&lt;h2 id=&quot;oss-活動&quot;&gt;OSS 活動&lt;/h2&gt;
&lt;p&gt;本質的にクソなものと普通に使えるものを両方雑に作った感じですかねえ❓；実装を通して中途半端な理解を矯正していくというのが多かったと思います。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yude/youbine&quot;&gt;yude/youbine: 郵便屋さん&lt;/a&gt;&lt;br /&gt;
当初 Node.js + Express で書こうと思っていましたが、シングルバイナリでないことが渋いというのと、実装しようとしていることの割にエコシステムが過剰なんじゃないかということで Fiber という Go の Express の実装みたいなのを使って書いてみました。JWT 認証がどのようであるかを実装を通して理解したり、本質的に漏れは &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST&lt;/code&gt; リクエストがなんやねんということの理解が浅いことに気づけてよかったんじゃないかと思います。てか Go の Embed という標準モジュールがエモすぎて嬉しかった。でも Go は Union 型無くて渋い（漏れは今の所、幸運なことにプログラミング初心者なので使う機会がないが、無いより有る方がいいよな）。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yude/adoc-report&quot;&gt;yude/adoc-report: 📓 アタシのレポート執筆環境&lt;/a&gt;&lt;br /&gt;
LaTeX は面倒だけど Word は使いたくないというワガママを極め、今年は Asciidoc + pandoc という環境に落ち着きました。漏れは本質的にインデントですべてが決まるというのがアレっぽく、その点で Asciidoc は記号の数とかでネストが決まったりしていいんじゃないかと思います。書式の種類も多いし。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/plazum/find-keke&quot;&gt;plazum/find-keke: 寻找唐可可&lt;/a&gt;&lt;br /&gt;
オタクのプロジェクトの翻訳直しただけ。大陸の人間と謎の交流ができてまあオモロでした。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yude/novel2renpy&quot;&gt;yude/novel2renpy: ノベルゲームの原稿を Ren’Py のソースコードに変換します。&lt;/a&gt;&lt;br /&gt;
普通にノベルゲーム研究会の開発で必要になった。TypeScript のいい感じの練習になってよかったと思う。正直 TypeScript の型システムを活用できている感じはしないが…&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yude/EPGSWatcher&quot;&gt;yude/EPGSWatcher: EPGStation と Mirakurun (mirakc) 間の接続性を監視&lt;/a&gt;&lt;br /&gt;
シンプルに実装が終わりすぎて使うのやめたほうがいいと思う。でもこれぐらいしか方法ないと思うんだよね❓&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yude/rtx1200_exporter&quot;&gt;yude/rtx1200_exporter: Prometheus exporter for YAMAHA RTX1200 router w/ yude.jp servers NAT traversal informations&lt;/a&gt;&lt;br /&gt;
YAMAHA RTX1200 の情報をいい感じに Prometheus に投げられるようになった。Lua とか書いたことないしまじで発狂してたな。Prometheus と Grafana のいい入門になったと思います。というか Minecraft やってた勢なら Lua 書けるやろみたいな空気あるよな。漏れは ComputerCraft やってないからわからんねん。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yude/np2bio&quot;&gt;yude/np2bio: Spotify の Now Playing を Twitter の bio に設定するボット&lt;/a&gt;&lt;br /&gt;
だいぶ動かしてたけど全然イーロンに怒られなくてそうなんだになった。いや怒られそうなものを本垢で動かすなみたいなハナシはありますね。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yude/stomach-breaker&quot;&gt;yude/stomach-breaker: 腹破壊&lt;/a&gt;&lt;br /&gt;
だいぶ遊ばれててよかった。でもこれ以上どうも発展させられないので、放置。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yude/ahnmika-white&quot;&gt;yude/ahnmika-white: 白って200色あんねん&lt;/a&gt;&lt;br /&gt;
某 Discord サーバーの方たちにいい感じに遊びを提供できてうれしかった。マジでこれはなんなんだ。一番最初の C での実装でどうやって control + C を検出するかということにめちゃくちゃ悩んでいた記憶がある。こういう方法があんねん。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yude/pldb&quot;&gt;yude/pldb&lt;/a&gt;&lt;br /&gt;
Spigot プラグインの開発に入門した。思ったよりそんなに・・・という感じだったし、2015 年ぐらいのマイクラキッズ時代にやっておけばよかったと思った。やっとけよマジで。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yuderobot/ai&quot;&gt;yuderobot/ai: 🐤 The brain of ai.&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/yuderobot&quot;&gt;@yuderobot&lt;/a&gt; の頭脳を全部入れ替えた。コードベースは &lt;a href=&quot;https://github.com/iamtakagi/ai&quot;&gt;iamtakagi/ai: 🐈 Artificial Intelligence which generates sentences @iam_takagi’s tweets with Markov chains.&lt;/a&gt; を使用している。定期的にツイートのアーカイブを取得するという苦行が消えてよかったと思う。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;インターネット&quot;&gt;インターネット&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Twitter が渋すぎてなんとも言えん感じに・・・。SNS 運用ってむずいしな。もうみんな PHS とか使えばいいよ、&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;公開-misskey-インスタンスを運用開始-miyudemoe&quot;&gt;公開 Misskey インスタンスを運用開始: &lt;a href=&quot;https://mi.yude.moe&quot;&gt;mi.yude.moe&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;漏れの周りの人間が Fediverse 上で落ち着いてアイデンティティーを設置できる場所があると嬉しいんちゃうという点と、ActivityPub を推進すべきという思想を持っている人間として公開インスタンスぐらいは持っとくとええんかなということで建てた。Misskey なのは一般的な日本人にとっては Mastodon や Pleroma より親和性のあるソフトウェアだと思ったから。あと Mastodon は Ruby on Rails なのが気に入らない (そんな…; 一応、テスト用 &amp;amp; 個人用で Mastodon インスタンスも稼働させている)。&lt;/li&gt;
  &lt;li&gt;絶対に落としたくないので、運用1ヶ月ぐらい経ってからオンプレ要素を全削除した。落ちてもオレは悪くない。悪いが…&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;自宅サーバーの更改&quot;&gt;自宅サーバーの更改&lt;/h3&gt;
&lt;p&gt;流石に 2014 年から稼働させ続けてきたマシンをこれ以上 24 時間稼働させるのは漏れの精神が持たないので、正直スペック的にはアップグレードの必要ないけど買い替えた。君には、休み無しで働いてもらうよん&lt;/p&gt;

&lt;h3 id=&quot;vrchat-のアバターを購入し改変&quot;&gt;VRChat のアバターを購入し、改変&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://booth.pm/ja/items/2559783&quot;&gt;『ラスク』-Rusk-【Quest/PC対応 オリジナル3Dモデル】 - あまとうさぎ - BOOTH&lt;/a&gt; を赤髪にしたり帽子かぶせたり。&lt;/p&gt;

&lt;h2 id=&quot;経済活動&quot;&gt;経済活動&lt;/h2&gt;
&lt;p&gt;今年も漢の買い物しすぎた。いつになったら落ち着ける？；価格が高い順に雑に紹介。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sony.jp/ichigan/products/ZV-E10/&quot;&gt;SONY ZV-E10&lt;/a&gt;&lt;br /&gt;
特にこだわりはないのでレンズキットを買った。なんで YouTuber でもないのに VLOGCAM ブランドを選んだかというと、動画を撮るのが好きなのに普通のミラーレス一眼を選んでまともに動画取れないと渋いから。あとデザインが好き。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.lenovo.com/jp/ja/p/laptops/thinkpad/thinkpad-e-series/thinkpad-e14-gen-3-(14%E2%80%9D-amd)/22tpe14e4a3&quot;&gt;Lenovo ThinkPad E14 Gen 3 (AMD)&lt;/a&gt;&lt;br /&gt;
ほぼ Linux 用マシン。去年 MacBook Air (M1, 2020) を買ったときに Windows マシンを売り払ったわけだけど、正直 Mac だけだと”&quot;”深い”&quot;”ことができず困ったので買った。これで Windows / macOS / Ubuntu / FreeBSD を持ち運べるようになり最強になったんじゃないかと思う。バッテリー駆動時間以外は今の所文句なく、その唯一の文句も普段 Apple Silicon のバッテリー持ちに慣れてるからだと思うんで、割にいい買い物だった。最初 Ubuntu じゃなくて Arch Linux 入れてたけど、疲れちゃったんだよな。体力がある人は使えばいいと思います。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nvidia.com/ja-jp/geforce/graphics-cards/30-series/rtx-3060-3060ti/&quot;&gt;NVIDIA GeForce RTX 3060&lt;/a&gt;&lt;br /&gt;
もともと GTX 1060 6GB を使っていて、あまりゲームもしないしこれ以上の性能が必要になることもないだろうと思っていましたが、VRChat をやり始めたり、様々なエーアイ遊びをしていたら普通に性能足りなくなりました。ので買いました。Palit 製 GPU は ASK 税を回避できていいらしい点を学びました。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.apple.com/kb/SP847?locale=ja_JP&quot;&gt;Apple iPhone 13 mini&lt;/a&gt;&lt;br /&gt;
Apple iPhone SE (第2世代) 使ってたけど、Apple Watch を買ったことをきっかけに iPhone をまあメインにしましょうやということで渋くなり買い替えた。Softbank の学割かなんかで安くなってよかったと思う。一応レンタル的 (毎月月賦払って、一定期間までに返すとそれ以上請求なし) な契約だけど、どうせ端末返還蹴られると思うんでこのまま最後まで使っていこうと思う。（そもそも本体価格割り引かれてるし、買い換える理由もなし・・・）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ゲーム&quot;&gt;ゲーム&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;プロジェクトセカイ カラフルステージ feat. 初音ミク
    &lt;ul&gt;
      &lt;li&gt;フルコンボ MASTER 楽曲 160 曲達成 (皆伝 13 粒)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ポケットモンスター バイオレット
    &lt;ul&gt;
      &lt;li&gt;3大ルート クリア&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2023-年の展望&quot;&gt;2023 年の展望&lt;/h1&gt;
&lt;p&gt;まとめたということは 2023 年の展望も語りをやっていくとよさそうなので、これも羅列してみます。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rust をちゃんと書けるようにする。&lt;/li&gt;
  &lt;li&gt;Linux カーネルと和解する。
    &lt;ul&gt;
      &lt;li&gt;個人的に Linux の新しいバージョンのカーネルが動いてほしい SBC があり、自分で完全に理解してビルドをやっていく必要がある。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;大学を卒業できるよう、ちゃんとやっていく。&lt;/li&gt;
  &lt;li&gt;3D プリンターを使えるようになる。
    &lt;ul&gt;
      &lt;li&gt;Autodesk Fusion 360 と和解する。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;応用情報技術者になる。
    &lt;ul&gt;
      &lt;li&gt;正直、疲れるのでやりたくはない。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;電子工作をやっていく。
    &lt;ul&gt;
      &lt;li&gt;SBC と組み合わせるパターンでないと、漏れは続かないと思うのでその方向でやっていく。&lt;/li&gt;
      &lt;li&gt;やさしいソフトウェアと組み合わせられないとあまり嬉しくはない。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;職を得るか、もしくはM進して進路を確定させる。&lt;/li&gt;
  &lt;li&gt;Misskey インスタンスを続けてやっていくのであれば、それを安定稼働させられるよう努力し、知見を蓄積する。&lt;/li&gt;
  &lt;li&gt;Kubernetes の意義を理解し、扱えるようになる。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上です。&lt;/p&gt;
</description>
        <pubDate>Sun, 25 Dec 2022 00:00:00 +0000</pubDate>
        <link>https://www.yude.jp//blog/2022-12-wrapping</link>
        <guid isPermaLink="true">https://www.yude.jp//blog/2022-12-wrapping</guid>
        
        <category>その他</category>
        
        
      </item>
    
      <item>
        <title>Mastodon インスタンスを高速に作成する</title>
        <description>&lt;h1 id=&quot;免責--注意-事項&quot;&gt;免責 / 注意 事項&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;yude はこの記事の内容をあなたが実行した結果の責任を一切負うことができません。自己責任で行ってください。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;必要なもの&quot;&gt;必要なもの&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Cloudflare で管理されている独自ドメイン&lt;/li&gt;
  &lt;li&gt;Docker, Docker Compose, cloudflared がインストールされているマシン
    &lt;ul&gt;
      &lt;li&gt;cloudflared のインストール方法については、この記事の最後の方を参照してください。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;手順&quot;&gt;手順&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;インストール中に問題が発生した場合、記事の下の方にある「トラブルシューティング」を参照してください。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-テンプレートの-git-リポジトリをクローンします&quot;&gt;1. テンプレートの Git リポジトリをクローンします。&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;yude が作成した人のぬくもりのあるテンプレート Git リポジトリをクローンします。
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/yude/docker-mastodon mastodon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-cloudflare-に-cloudflared-からログインします&quot;&gt;2. Cloudflare に &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudflared&lt;/code&gt; からログインします。&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;まず、不具合を防ぐために事前に Cloudflare のダッシュボードにログインしておきます。&lt;/li&gt;
  &lt;li&gt;その後、以下のコマンドを実行すると、Cloudflare の認証ページへの URL が表示されます。
    &lt;ul&gt;
      &lt;li&gt;若干処理が長いため、気長に待ってください。
        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cloudflared login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cloudflare の認証ページでは、あなたが Mastodon を公開する予定のドメインを指定してください。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-cloudflare-の設定を行います&quot;&gt;3. Cloudflare の設定を行います。&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;トンネルを定義します。
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cloudflared tunnel create mastodon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mastodon&lt;/code&gt; の部分は英数字で任意に設定できます。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ドメインとトンネルを紐付けます。
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cloudflared tunnel route dns mastodon mstdn.yude.jp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mastodon&lt;/code&gt; の部分はステップ 1 で定義したトンネル名を指定してください。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mstdn.yude.jp&lt;/code&gt; の部分は Mastodon を稼働させる予定のドメインを指定してください。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;4-docker-コンテナの設定を行います&quot;&gt;4. Docker コンテナの設定を行います。&lt;/h2&gt;
&lt;p&gt;クローンしたリポジトリ内にある &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yaml&lt;/code&gt; を開き、必要な項目を設定していきます。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;サービス &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudflared&lt;/code&gt; の &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command&lt;/code&gt; の項にある &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mastodon&lt;/code&gt; の部分を、ステップ 4.1 で指定したトンネル名に変更してください。&lt;br /&gt;
例のとおりに &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mastodon&lt;/code&gt; とした場合は、何もする必要はありません。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;5-mastodon-の設定を行います&quot;&gt;5. Mastodon の設定を行います。&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;まずは、設定ファイルのテンプレートをダウンロードします。
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; .env.production https://raw.githubusercontent.com/mastodon/mastodon/main/.env.production.sample
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env.production&lt;/code&gt; を開き、必要な項目を設定していきます。
    &lt;ul&gt;
      &lt;li&gt;まずは、設定に使用するコマンドを2つ示します。これらは、両方とも &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yaml&lt;/code&gt; が存在するディレクトリで実行してください。&lt;/li&gt;
    &lt;/ul&gt;
    &lt;ul&gt;
      &lt;li&gt;コマンド1: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker compose run --rm web bundle exec rake secret&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;コマンド2: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker compose run --rm web bundle exec rake mastodon:webpush:generate_vapid_key&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;以下が &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env.production&lt;/code&gt; 中の設定項目です。
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;S3_ENABLED&lt;/code&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; に設定します。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LOCAL_DOMAIN&lt;/code&gt;: Mastodon を稼働させる予定のドメイン (例: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mstdn.yude.jp&lt;/code&gt;)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;REDIS_HOST&lt;/code&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;redis&lt;/code&gt; に変更してください。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DB_HOST&lt;/code&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;db&lt;/code&gt; に変更してください。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ES_ENABLED&lt;/code&gt;: 今回は &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; に変更してください。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SECRET_KEY_BASE&lt;/code&gt;: &lt;strong&gt;コマンド1&lt;/strong&gt;を実行して得られた文字列を貼り付けてください。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OTP_SECRET&lt;/code&gt;: &lt;strong&gt;コマンド1&lt;/strong&gt;を実行して得られた文字列を貼り付けてください。ただし、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SECRET_KEY_BASE&lt;/code&gt; とは異なる文字列になるようにしてください。(2回生成コマンドを実行してください。)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VAPID_PRIVATE_KEY&lt;/code&gt; &amp;amp; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VAPID_PUBLIC_KEY&lt;/code&gt;: &lt;strong&gt;コマンド2&lt;/strong&gt;を実行して得られた文字列を貼り付けてください。コマンドを実行すると、そのまま貼り付けられる形式で結果を得られます。&lt;/li&gt;
    &lt;/ul&gt;
    &lt;hr /&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;以下の設定項目には、SMTP サーバ (電子メールの送信を担当するサーバ) が必要です。なんらかの手段によって、これを用意してください。&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMTP_SERVER&lt;/code&gt;: SMTP サーバのアドレスを指定してください。&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMTP_PORT&lt;/code&gt;: SMTP サーバのポート番号を指定してください。&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMTP_LOGIN&lt;/code&gt;: SMTP サーバのユーザ ID を指定してください。&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMTP_PASSWORD&lt;/code&gt;: SMTP サーバのパスワードを指定してください。&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMTP_FROM_ADDRESS&lt;/code&gt;: サーバーの利用者から、Mastodon インスタンスからのメールに付属するメールアドレスをどのように見せたいかを指定してください。(例: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;noreply@yude.jp&lt;/code&gt;)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;hr /&gt;

    &lt;ul&gt;
      &lt;li&gt;また、自分しか使用しない場合は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env.production&lt;/code&gt; に以下を追記してください。
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  SINGLE_USER_MODE=true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;アセットファイルとデータベースを初期化します。
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker compose run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; web rails db:migrate
 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker compose run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; web rails assets:precompile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;6-起動します&quot;&gt;6. 起動します。&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker compose up -d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;起動後、あなたのアカウントをできるだけ早く作成してください。&lt;/li&gt;
  &lt;li&gt;起動したら、以下のコマンドであなたのアカウントをオーナーに設定してください。
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;docker compose ps &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; web&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt; bin/tootctl accounts modify your_name &lt;span class=&quot;nt&quot;&gt;--role&lt;/span&gt; Owner
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;your_name&lt;/code&gt; にはあなたのスクリーンネームを指定します。(例: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@your_name&lt;/code&gt; と表示されているものを、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;your_name&lt;/code&gt; として指定します。)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;参考-cloudflared-をインストールする&quot;&gt;参考: cloudflared をインストールする&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Debian の場合
    &lt;ol&gt;
      &lt;li&gt;リポジトリを追加します。
        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/ buster main&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sudo tee&lt;/span&gt; /etc/apt/sources.list.d/cloudflare-main.list 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;公開鍵を追加します。
        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;curl https://pkg.cloudflare.com/cloudflare-main.gpg &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /usr/share/keyrings/cloudflare-main.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudflared&lt;/code&gt; をインストールします。
        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;cloudflared
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;その他のディストリビューションについては、&lt;a href=&quot;https://pkg.cloudflare.com/&quot;&gt;こちら&lt;/a&gt; を参照してください。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;トラブルシューティング&quot;&gt;トラブルシューティング&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Docker Compose について:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker compose&lt;/code&gt; を実行して、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'compose' is not a docker command.&lt;/code&gt; と表示されないことを確認してください。&lt;/li&gt;
      &lt;li&gt;もしそのように表示されてしまった場合、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose&lt;/code&gt; というコマンドが存在するか確認してください。
        &lt;ul&gt;
          &lt;li&gt;存在した場合
            &lt;ul&gt;
              &lt;li&gt;記事中の &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker compose&lt;/code&gt; の部分を &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose&lt;/code&gt; に読み替えてください。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;存在しない場合
            &lt;ul&gt;
              &lt;li&gt;Docker の公式リポジトリを使用して、最新の Docker Engine と Docker Compose Plugin をインストールしてください。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Error 1033: Argo Tunnel error&lt;/code&gt; が発生する場合
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudflared&lt;/code&gt; の動作に異常があります。以下のコマンドを実行してログを表示することで、問題解決の助けとなるでしょう。
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker compose logs cloudflared&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Internal Server Error&lt;/code&gt; が発生する。
    &lt;ul&gt;
      &lt;li&gt;多くはファイルの権限が間違っていることが原因です。以下のコマンドで権限を修正できます。&lt;br /&gt;
  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker compose exec -u root web chown -R mastodon:mastodon ./&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 25 Jul 2022 00:00:00 +0000</pubDate>
        <link>https://www.yude.jp//blog/2022-07-install-mastodon</link>
        <guid isPermaLink="true">https://www.yude.jp//blog/2022-07-install-mastodon</guid>
        
        <category>Mastodon</category>
        
        <category>セルフホスト</category>
        
        <category>ActivityPub</category>
        
        
      </item>
    
      <item>
        <title>Windows 11 と Arch Linux のデュアルブートを設定しました</title>
        <description>&lt;h1 id=&quot;はじめに&quot;&gt;はじめに&lt;/h1&gt;
&lt;p&gt;2022年7月に &lt;a href=&quot;https://www.lenovo.com/jp/ja/notebooks/thinkpad/e-series/ThinkPad-E14-Gen-3-14%E2%80%9D-AMD/p/22TPE14E4A3&quot;&gt;Lenovo ThinkPad E14 Gen 3 (AMD)&lt;/a&gt; を導入し、Windows 11 と Arch Linux のデュアルブートを設定しました。&lt;br /&gt;
この記事では、その方法を備忘録として公開します。&lt;br /&gt;
また、Windows 11 としていますが、UEFI でブートするように設定されている Windows 7 以上の Windows であれば問題なく実行できるはずです。&lt;/p&gt;

&lt;h1 id=&quot;免責--注意-事項&quot;&gt;免責 / 注意 事項&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;yude はこの記事の内容をあなたが実行した結果の責任を一切負うことができません。自己責任で行ってください。
    &lt;ul&gt;
      &lt;li&gt;Arch Linux, Gentoo Linux, Linux From Scratch などのソースベースの Linux ディストリビューションをインストールしたことがないレベルの初学者の方は、本番環境のコンピュータで行うことを全く推奨しません。パーティションテーブルを破壊しても問題のないコンピュータで実行してください。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;操作を行う前に、必要なデータをバックアップしてください。また、インストール前に、できるだけ関係のないストレージをコンピュータから取り外しておくことを推奨します。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;用意&quot;&gt;用意&lt;/h1&gt;
&lt;p&gt;インストールする前に、コンピュータが条件を満たしていることを確認します。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;UEFI に対応していること。2012 年以降に製造されたコンピュータであれば、大抵問題ありません。&lt;/li&gt;
  &lt;li&gt;デスクトップ環境を導入する場合は 2 GB 以上のメモリ。そうでない場合は 512 MB。&lt;/li&gt;
  &lt;li&gt;アーキテクチャが x86_64 であること。&lt;/li&gt;
  &lt;li&gt;Apple の T2 チップ搭載 Mac 等、特殊なハードウェアでないこと。元々 Windows が稼働しているコンピュータであれば、大抵問題ありません。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他、&lt;a href=&quot;https://wiki.archlinux.jp/index.php/%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%82%AC%E3%82%A4%E3%83%89&quot;&gt;インストールガイド&lt;/a&gt;に記載されている条件を満たしていることを確認してください。&lt;/p&gt;

&lt;h1 id=&quot;手順&quot;&gt;手順&lt;/h1&gt;
&lt;h2 id=&quot;ブート-usb-の準備&quot;&gt;ブート USB の準備&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;まず、Arch Linux の最新の iso イメージファイルを&lt;a href=&quot;https://www.archlinux.jp/download/&quot;&gt;ダウンロード&lt;/a&gt;してください。
    &lt;h3 id=&quot;windows&quot;&gt;Windows&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rufus.ie/ja/&quot;&gt;Rufus&lt;/a&gt; または &lt;a href=&quot;https://www.balena.io/etcher/&quot;&gt;balenaEtcher&lt;/a&gt; を使うのが楽です。
    &lt;h3 id=&quot;macos&quot;&gt;macOS&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.balena.io/etcher/&quot;&gt;balenaEtcher&lt;/a&gt; を使うのが楽です。
    &lt;h3 id=&quot;linux&quot;&gt;Linux&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dd&lt;/code&gt; コマンドを使用して書き込みます。
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo dd &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;archiso.iso &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/sdHoge &lt;span class=&quot;nv&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1M &lt;span class=&quot;nv&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;progress
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;archiso.iso&lt;/code&gt; は iso イメージへのパス、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dev/sdHoge&lt;/code&gt; は USB フラッシュドライブのデバイスファイルに置き換えてください。
        &lt;ul&gt;
          &lt;li&gt;デバイスファイルは、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo fdisk -l&lt;/code&gt; コマンド等で確認できます。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GUI が必要な場合は、先述の &lt;a href=&quot;https://www.balena.io/etcher/&quot;&gt;balenaEtcher&lt;/a&gt; を使うこともできます。
    &lt;h2 id=&quot;コンピュータの準備&quot;&gt;コンピュータの準備&lt;/h2&gt;
    &lt;h3 id=&quot;windows-の設定&quot;&gt;Windows の設定&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;リアルタイムクロックを UTC 基準にします。
    &lt;ul&gt;
      &lt;li&gt;Windows は、既定の状態では時計の基準に現地時間を使いますが、これはデュアルブートにおいて相性が悪いです。&lt;/li&gt;
      &lt;li&gt;以下のコマンドを管理者権限のあるターミナルで実行してください。
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reg add &quot;HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\TimeZoneInformation&quot; /v RealTimeIsUniversal /d 1 /t REG_DWORD /f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;高速スタートアップとハイバネートを無効化します。
    &lt;ul&gt;
      &lt;li&gt;これにより、Windows を使用中に「休止状態」にすることができなくなりますが、Arch Linux の使用中に起きる可能性のある問題を避けることができます。&lt;/li&gt;
      &lt;li&gt;「休止状態」を使用する必要がある場合は、代わりに高速スタートアップのみを無効化することができます。
        &lt;ul&gt;
          &lt;li&gt;方法については、以下のページをご覧ください:&lt;br /&gt;
&lt;a href=&quot;https://www.fmworld.net/cs/azbyclub/qanavi/jsp/qacontents.jsp?PID=6010-9312&quot;&gt;富士通Q&amp;amp;A - [Windows 10] 高速スタートアップを無効にする方法を教えてください。 - FMVサポート : 富士通パソコン&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;高速スタートアップとハイバネートを無効化するには、以下のコマンドを管理者権限のあるターミナルで実行してください。
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  powercfg /h off
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;パーティションを準備します。
    &lt;ul&gt;
      &lt;li&gt;Windows と Arch Linux を同じストレージ デバイスにインストールする場合は、Windows が専有しているパーティションを縮小してください。
        &lt;ul&gt;
          &lt;li&gt;縮小する前に、ストレージに十分な空き容量を確保し、かつデフラグを行う必要がある場合もあります。&lt;/li&gt;
          &lt;li&gt;方法については、以下のページをご覧ください:&lt;br /&gt;
&lt;a href=&quot;https://faq.nec-lavie.jp/qasearch/1007/app/servlet/relatedqa?QID=020024&quot;&gt;NEC LAVIE公式サイト &amp;gt; サービス＆サポート &amp;gt; Q&amp;amp;A &amp;gt; Q&amp;amp;A番号 020024 「Windows 10で、Cドライブの容量を縮小して新しくドライブを作成する方法について教えてください。」&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;コンピュータに内蔵ストレージ デバイスが複数取り付けられており、物理的に異なるデバイスに Arch Linux をインストールする場合は、「ディスクの管理」から事前にパーティションを初期化しておいてください。
        &lt;ul&gt;
          &lt;li&gt;手順は以下のページを参考にしてください:&lt;br /&gt;
&lt;a href=&quot;https://docs.microsoft.com/ja-jp/windows-server/storage/disk-management/initialize-new-disks&quot;&gt;新しいディスクの初期化 | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;パーティションの種類については、&lt;strong&gt;GPT&lt;/strong&gt; を選択してください。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Windows の設定を完了したら、次は UEFI の設定を行います。
    &lt;h3 id=&quot;uefi-の設定&quot;&gt;UEFI の設定&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;操作手順はコンピュータに搭載されている UEFI によって異なるため、ここでは手順を記載せず、達成するべき目標のみを記述します。
    &lt;ul&gt;
      &lt;li&gt;セキュアブートを無効化してください。&lt;/li&gt;
      &lt;li&gt;ファストブートをできるだけ無効化してください。&lt;/li&gt;
      &lt;li&gt;ブート元デバイスの順番を調節し、USB フラッシュドライブが最初に読み込まれるようにしてください。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;arch-linux-の基本的なインストール&quot;&gt;Arch Linux の基本的なインストール&lt;/h2&gt;
&lt;p&gt;いよいよ、Arch Linux をストレージにインストールします。&lt;br /&gt;
まずは、iso イメージを書き込んだ USB フラッシュドライブから Arch Linux をブートしてください。&lt;/p&gt;
&lt;h3 id=&quot;手順-1&quot;&gt;手順&lt;/h3&gt;
&lt;h4 id=&quot;1-キーマップを設定します&quot;&gt;1. キーマップを設定します。&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;日本語のキーボードを使用している場合は、以下のコマンドを実行します。
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;loadkeys jp106
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;英字のキーボードを使用している場合は、手順をスキップしてください。
    &lt;h4 id=&quot;2-インターネットに接続します&quot;&gt;2. インターネットに接続します。&lt;/h4&gt;
  &lt;/li&gt;
  &lt;li&gt;有線で接続する場合&lt;br /&gt;
LAN ケーブルをコンピュータに接続してください。&lt;/li&gt;
  &lt;li&gt;Wi-Fi で接続する場合
    &lt;ol&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iwctl&lt;/code&gt; コマンドを実行します。プロンプトが &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[iwd]#&lt;/code&gt; に変化したことを確認してください。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;device list&lt;/code&gt; で無線 LAN アダプターの一覧を表示します。&lt;br /&gt;
 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Name&lt;/code&gt; の列に表示されているものを覚えるか、メモしてください。通常 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wlan0&lt;/code&gt; などが該当します。&lt;br /&gt;
 これはデバイス名で、ステップ 3 以降で使用します。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;station デバイス名 scan&lt;/code&gt; で Wi-Fi ネットワークをスキャンします。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;station デバイス名 get-networks&lt;/code&gt; で近隣にあるアクセスポイントの SSID を確認します。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;station デバイス名 connect 目的の SSID&lt;/code&gt; でアクセスポイントに接続します。
 コマンドの実行後、パスワードを求められますから入力してください。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exit&lt;/code&gt; で iwctl から抜けます。
        &lt;h4 id=&quot;3-時計を調節します&quot;&gt;3. 時計を調節します。&lt;/h4&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;NTP サーバから正しい時刻を取得します。
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;timedatectl set-ntp &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;h4 id=&quot;4-パーティションを初期化します&quot;&gt;4. パーティションを初期化します。&lt;/h4&gt;
    &lt;ol&gt;
      &lt;li&gt;目的のパーティションのデバイスファイルの場所を確認します。
        &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;fdisk &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;デバイス の列に表示されているものが、デバイスファイルの場所です。&lt;br /&gt;
いくつか表示されているもののうち、次に該当するものをメモしておきます。&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;タイプが “EFI システム” となっているもの。&lt;/li&gt;
  &lt;li&gt;Arch Linux をインストールする先のパーティション
    &lt;ul&gt;
      &lt;li&gt;「Windows の設定」で用意したパーティションのデバイス ファイルをメモしてください。&lt;/li&gt;
      &lt;li&gt;明確なラベル等は表示されないため、パーティションの順序・大きさ等から目的のパーティションを特定してください。
        &lt;ul&gt;
          &lt;li&gt;もしくは、一時的にマウントして目的のパーティションであるかどうかを確認できます:
            &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;# NTFS のパーティションをマウントするために必要&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pacman &lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt; ntfs-3g
  &lt;span class=&quot;c&quot;&gt;# マウントする&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;## ここでエラーが発生するとき、「パーティションの中身を表示する」をスキップしてください。&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;## エラーが発生する場合は、この手順で目的のパーティションであるかどうかを特定することは危険です。&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mount &lt;span class=&quot;nt&quot;&gt;--mkdir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;パーティションのデバイス ファイルの場所] /tmp/hogepart
  &lt;span class=&quot;c&quot;&gt;# パーティションの中身を表示する&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /tmp/hogepart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
            &lt;ol&gt;
              &lt;li&gt;Arch Linux をインストールするパーティションを ext4 でフォーマットします。&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ext4 は Linux において最も一般的なファイルシステムです。&lt;/li&gt;
  &lt;li&gt;次のコマンドでフォーマットできます:
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkfs.ext4 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ステップ 1 で確認したデバイスファイルのパス]
  &lt;span class=&quot;c&quot;&gt;# 例: mkfs.ext4 /dev/sda2 または mkfs.ext4 /dev/nvme1n1p2 など。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;5-必要なパーティションをマウントします&quot;&gt;5. 必要なパーティションをマウントします。&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;マウントとは、ストレージ デバイスの中にある特定のパーティションと、自分が現在アクセスできる何らかのディレクトリを関連付ける操作のことをいいます。
    &lt;ol&gt;
      &lt;li&gt;Linux のインストール先のパーティションをマウントします。
        &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mount &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ステップ 1 で確認したデバイスファイルのパス] /mnt
  &lt;span class=&quot;c&quot;&gt;# 例: mount /dev/sda2 /mnt または mount /dev/nvme1n1p2 /mnt など。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;EFI パーティションをマウントします。
        &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mount &lt;span class=&quot;nt&quot;&gt;--mkdir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ステップ 1 で確認したデバイスファイルのパス] /mnt/boot
  &lt;span class=&quot;c&quot;&gt;# 例: mount /dev/sda1 /mnt または mount /dev/nvme1n1p0 /mnt など。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;6-基本的な-linux-システムのインストール&quot;&gt;6. 基本的な Linux システムのインストール&lt;/h3&gt;
&lt;p&gt;Arch Linux の基本的な内容をインストールするには、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pacstrap&lt;/code&gt; コマンドを使用します。\&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;実用的な Linux システムをインストールするには、次のように実行します。
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pacstrap /mnt base base-devel linux linux-firmware nano neofetch &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;networkmanager git &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;refind intel-ucode bash-completion
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pacstrap&lt;/code&gt; の説明
    &lt;ul&gt;
      &lt;li&gt;第1引数には、Linux をインストールするパーティションのマウント先を指定します。&lt;/li&gt;
      &lt;li&gt;第2引数以降には、Linux システムを初期化するとともにインストールしたいパッケージを列挙します。
        &lt;ul&gt;
          &lt;li&gt;基本的には、例示されているパッケージを削らないでください。これからのステップでは、これらのパッケージがインストール済みであることを前提に進むからです。&lt;/li&gt;
          &lt;li&gt;パッケージの説明 (一部省略)
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;linux&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;linux-firmware&lt;/code&gt;: Arch Linux を構成する基本的なパッケージ / グループで、必須です。&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base-devel&lt;/code&gt;: パッケージをビルドしたりするための開発用ツールの集合です。&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nano&lt;/code&gt;: CLI で使えるテキストエディタです。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vim&lt;/code&gt; などに置き換えることができます。&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;neofetch&lt;/code&gt;: システムの概要を表示します。&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt;: 一時的にユーザーに特権を許します。&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;networkmanager&lt;/code&gt;: ネットワークへの接続を司ります。&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git&lt;/code&gt;: バージョン管理システム Git のクライアントです。&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;intel-ucode&lt;/code&gt;: Intel 製 CPU のマイクロコードです。CPU がリリースされた後に発見されたバグなどを修正します。(&lt;strong&gt;AMD 製 CPU をお使いの方は、代わりに &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amd-ucode&lt;/code&gt; をインストールしてください。&lt;/strong&gt;)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;7-インストールした-arch-linux-を設定します&quot;&gt;7. インストールした Arch Linux を設定します。&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;fstab を生成します。
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/fstab&lt;/code&gt; というファイルがあり、ここには Linux システムがどのパーティションを起動時等にどこにマウントすべきかを記述します。&lt;br /&gt;
以下のコマンドで、自動的に生成できます。
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;genfstab &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt; /mnt &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /mnt/etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;chroot でインストールした Linux システムに憑依します。
インストールしたシステムに入り込んで、詳細な設定を行います。
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;arch-chroot /mnt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;タイムゾーンを設定します。
以下のコマンドを実行して、タイムゾーンを設定します。日本にお住まいの場合は以下のコマンドを実行してください。
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;timedatectl set-timezone Asia/Tokyo
 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hwclock &lt;span class=&quot;nt&quot;&gt;--systohc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;国際化
Linux システムに日本語を教えます。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/locale.gen&lt;/code&gt; を &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nano&lt;/code&gt; などのテキストエディタで開き、以下の内容に該当する行のコメントアウトを解除してください。
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; en_US.UTF-8
 ja_JP.UTF-8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;以下のコマンドを実行して、キーマップを設定します。
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;localectl set-keymap jp106
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;以下のコマンドを実行して、言語ファイルを生成します。
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;locale-gen
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;コンピュータのホスト名を設定します。
英数字を用いて、コンピュータの名前を設定してください。ただし、先頭に数字が来ないようにしてください。&lt;br /&gt;
以下のコマンドを実行することで、設定できます。
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;コンピュータの名前] &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/hostname
 &lt;span class=&quot;c&quot;&gt;# 例: echo &quot;arch&quot; &amp;gt;&amp;gt; /etc/hostname&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;コンピュータのアカウントを設定します。
    &lt;ul&gt;
      &lt;li&gt;まず、root アカウントのパスワードを設定します。以下のコマンドを実行してください。
        &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;passwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;次に、自分が普段使用するアカウントを作成し、パスワードを設定します。以下のコマンドを実行してください。
        &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;# 以下の例では、自分のアカウントを wheel グループ (管理者) に所属させ、シェルに Bash を使うようにします。&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;# 名前は、英数字で設定してください。&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;useradd &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-G&lt;/span&gt; wheel &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /bin/bash 名前
 &lt;span class=&quot;c&quot;&gt;# パスワードを設定します。&lt;/span&gt;
 passwd 名前
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wheel&lt;/code&gt; グループが &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt; コマンドを使用できるようにします。
 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt; の設定ファイルは、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EDITOR=nano visudo&lt;/code&gt; コマンドを実行すると開けます。&lt;br /&gt;
 以下の内容を、開いたテキストファイルに&lt;strong&gt;追記&lt;/strong&gt;してください。
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; %wheel ALL=(ALL) ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;必要なサービスの有効化
普段使用するサービスを、Linux の起動時に同時に起動させるようにしておきます。&lt;br /&gt;
以下のコマンドを実行してください。
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;NetworkManager.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;ブートローダの設定
Linux を呼び出すには、ブートローダーが必要です。今回は &lt;a href=&quot;https://wiki.archlinux.jp/index.php/REFInd&quot;&gt;rEFInd&lt;/a&gt; という優れたブートローダーを使用します。&lt;br /&gt;
以下に手順を示します。
    &lt;ol&gt;
      &lt;li&gt;以下のコマンドで、基本的なファイルを自動的に生成します。
        &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;refind-install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/boot/refind_linux.conf&lt;/code&gt; を編集します。
        &lt;ul&gt;
          &lt;li&gt;作業前に、ファイルをバックアップしておきます。以下のコマンドを実行してください。
            &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /boot/refind_linux.conf /boot/refind_linux.conf.bak
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
        &lt;ul&gt;
          &lt;li&gt;以下のコマンドを実行して、rEFInd を設定します。
            &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Boot with standard options&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;root=UUID=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;blkid &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Linux をインストールしたパーティションのデバイス ファイルの場所] &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; UUID &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; value&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; rootfstype=ext4 rw splash&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;9-基本的なセットアップの完了&quot;&gt;9. 基本的なセットアップの完了&lt;/h4&gt;
&lt;p&gt;以上で、基本的なセットアップは完了したはずです。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exit&lt;/code&gt; コマンドを実行して chroot から抜け、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reboot&lt;/code&gt; で再起動します。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;起動しない場合
    &lt;ul&gt;
      &lt;li&gt;Windows が起動してしまう場合&lt;br /&gt;
  UEFI の設定で、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rEFInd Boot Manager&lt;/code&gt; の優先順位を最高にしてください。&lt;/li&gt;
      &lt;li&gt;Emergency mode に入ってしまう場合&lt;br /&gt;
  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;refind_linux.conf&lt;/code&gt; の記述が間違っています。もう一度手順を読み込み、やり直してください。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;10-arch-linux-のデスクトップ環境の導入&quot;&gt;10. Arch Linux のデスクトップ環境の導入&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;デスクトップ環境が必要ない場合、この手順を完全に飛ばすことができます。&lt;/li&gt;
  &lt;li&gt;今回は、&lt;a href=&quot;https://kde.org/plasma-desktop/&quot;&gt;KDE Plasma&lt;/a&gt; というデスクトップ環境を導入します。
    &lt;ul&gt;
      &lt;li&gt;スクリーンショット
  &lt;img src=&quot;https://i.imgur.com/xlxiPMR.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;必要なパッケージをインストールします。
        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pacman &lt;span class=&quot;nt&quot;&gt;-Syu&lt;/span&gt; plasma kde-applications sddm xorg adobe-source-han-sans-jp-fonts fcitx-im fcitx-configtool fcitx-mozc kcm-fcitx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;SDDM が Arch Linux の起動時に自動的に立ち上がるようにします。
        &lt;ul&gt;
          &lt;li&gt;SDDM は、X サーバのセッションを開始する役目を担います。&lt;/li&gt;
          &lt;li&gt;以下のコマンドを実行して、自動起動を有効にします。
            &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;sddm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;日本語入力の設定をします。
        &lt;ul&gt;
          &lt;li&gt;ホームディレクトリ以下の &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.xprofile&lt;/code&gt; (正確なパス: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$HOME/.xprofile&lt;/code&gt;) に以下の内容を書き込んでください。
            &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  export GTK_IM_MODULE=fcitx
  export QT_IM_MODULE=fcitx
  export XMODIFIERS=”@im=fcitx”
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;表示言語を日本語に設定し、キーボードレイアウトを設定します。
  ```bash
  $ sudo localectl set-locale ja_JP.UTF-8
  $ sudo localectl set-x11-keymap jp&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;再起動し、Plasma を起動します。&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;Fcitx (日本語入力メソッド) が自動的に起動するようにします。また、入力メソッドとして登録します。
        &lt;ul&gt;
          &lt;li&gt;ここからのコマンドは、Konsole 等のターミナルエミュレータから実行するようにします。&lt;/li&gt;
          &lt;li&gt;自動起動するには、以下のコマンドを実行します。
            &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;fcitx-autostart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;Fcitx を入力メソッドの1つとして登録します。以下のコマンドを実行して表示された画面から、Mozc を追加します。
            &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;fcitx-configtool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;もう一度再起動すると、すべての設定が完了します。&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;11-終わりに&quot;&gt;11. 終わりに&lt;/h1&gt;
&lt;p&gt;内容の誤り、補足、誤字・脱字 等ございましたら、&lt;a href=&quot;https://github.com/yudejp/yude.jp_v2/issues&quot;&gt;こちら&lt;/a&gt; までお願いします。&lt;/p&gt;
</description>
        <pubDate>Tue, 05 Jul 2022 00:00:00 +0000</pubDate>
        <link>https://www.yude.jp//blog/2022-07-install-arch-linux</link>
        <guid isPermaLink="true">https://www.yude.jp//blog/2022-07-install-arch-linux</guid>
        
        <category>Windows</category>
        
        <category>Arch Linux</category>
        
        <category>デュアルブート</category>
        
        <category>rEFInd</category>
        
        
      </item>
    
  </channel>
</rss>
